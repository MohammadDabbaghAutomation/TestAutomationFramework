<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="45" started-at="2022-02-28T12:26:10Z" finished-at="2022-02-28T12:26:10Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="45" started-at="2022-02-28T12:26:10Z" finished-at="2022-02-28T12:26:10Z">
      <class name="capital_UI_Smoke.SmokeSuite">
        <test-method status="FAIL" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:capital_UI_Smoke.SmokeSuite@1198b989]" name="setUp" is-config="true" duration-ms="0" started-at="2022-02-28T14:26:10Z" finished-at="2022-02-28T14:26:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[param-val-not-found]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[param-val-not-found]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalAccessError">
            <message>
              <![CDATA[tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.<init>(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.<init>(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker
	at org.openqa.selenium.net.UrlChecker.<init>(UrlChecker.java:67)
	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:175)
	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:166)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:241)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:128)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:141)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at capital.capital.chromeDriver.driverprovider(chromeDriver.java:14)
	at capital.capital.App.chromedriver(App.java:76)
	at capital.capital.App.driverprovider(App.java:71)
	at capital_UI_Smoke.SmokeSuite.setUp(SmokeSuite.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:143)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:307)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalAccessError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startReport()[pri:0, instance:capital_UI_Smoke.SmokeSuite@1198b989]" name="startReport" is-config="true" duration-ms="0" started-at="2022-02-28T14:26:10Z" finished-at="2022-02-28T14:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="SKIP" signature="login_test()[pri:0, instance:capital_UI_Smoke.SmokeSuite@1198b989]" name="login_test" duration-ms="2" started-at="2022-02-28T14:26:10Z" finished-at="2022-02-28T14:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_test -->
        <test-method status="SKIP" signature="getResult(org.testng.ITestResult)[pri:0, instance:capital_UI_Smoke.SmokeSuite@1198b989]" name="getResult" is-config="true" duration-ms="0" started-at="2022-02-28T14:26:10Z" finished-at="2022-02-28T14:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="resetGlobalVariables()[pri:0, instance:capital_UI_Smoke.SmokeSuite@1198b989]" name="resetGlobalVariables" is-config="true" duration-ms="0" started-at="2022-02-28T14:26:10Z" finished-at="2022-02-28T14:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetGlobalVariables -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:capital_UI_Smoke.SmokeSuite@1198b989]" name="tearDown" is-config="true" duration-ms="0" started-at="2022-02-28T14:26:10Z" finished-at="2022-02-28T14:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="aftersuite()[pri:0, instance:capital_UI_Smoke.SmokeSuite@1198b989]" name="aftersuite" is-config="true" duration-ms="0" started-at="2022-02-28T14:26:20Z" finished-at="2022-02-28T14:26:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- capital_UI_Smoke.SmokeSuite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
